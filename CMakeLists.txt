cmake_minimum_required(VERSION 3.1)
enable_language(CXX)
enable_testing()
find_package(CUDA REQUIRED)
find_package(OpenMP REQUIRED)
find_program(BASH bash)
set (CMAKE_BUILD_TYPE RELEASE)
set (CMAKE_CXX_STANDARD 11)
set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} -D_FORCE_INLINES")
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set (CUDA_64_BIT_DEVICE_CODE ON)
set (CUDA_BUILD_CUBIN ON)
list(APPEND CUDA_NVCC_FLAGS "-std c++11;-use_fast_math")
project(bsde)
aux_source_directory(baseline BASELINE)
aux_source_directory(omp      OMP)
add_executable(baseline ${BASELINE})
add_executable(omp      ${OMP})
cuda_add_executable(cuda cuda/helper_cuda.h cuda/helper_string.h cuda/kernel.cu)
cuda_add_executable(multigpu multigpu/exception.h multigpu/helper_cuda.h multigpu/helper_string.h multigpu/helper_timer.h multigpu/kernel.cu multigpu/multithreading.cpp multigpu/multithreading.h)
add_test(test_multigpu ${BASH} ${CMAKE_CURRENT_SOURCE_DIR}/test_multigpu.sh)
add_test(test_cuda ${BASH} ${CMAKE_CURRENT_SOURCE_DIR}/test_cuda.sh)
add_test(test_omp ${BASH} ${CMAKE_CURRENT_SOURCE_DIR}/test_omp.sh)
add_test(test_baseline ${BASH} ${CMAKE_CURRENT_SOURCE_DIR}/test_baseline.sh)
